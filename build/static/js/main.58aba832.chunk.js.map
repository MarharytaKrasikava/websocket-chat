{"version":3,"sources":["store/reducers/messages.js","store/reducers/filters.js","components/MessageInput/MessageInput.js","store/selectors/messages.js","components/MessageList/MessageList.js","App.js","store/configureStore.js","store/actions/messages.js","store/actions/filters.js","index.js"],"names":["messagesReducerDefaultState","reducers_messages","state","arguments","length","undefined","action","type","concat","Object","toConsumableArray","message","filtersReducerDefaultState","sortBy","user","filters","objectSpread","useStyles","makeStyles","theme","textField","margin","spacing","backgroundColor","button","Input","_ref","socket","classes","_React$useState","React","useState","value","_React$useState2","slicedToArray","setMessage","_React$useState3","_React$useState4","nick","setNick","react_default","a","createElement","name","onSubmit","event","localStorage","getItem","outgoingMessage","JSON","stringify","from","send","preventDefault","TextField","id","label","className","onChange","target","variant","style","width","setItem","Button","color","selectors_messages","messages","filter","toLowerCase","includes","sort","b","time","container","height","overflowY","overflowX","overflowWrap","root","padding","textAlign","connect","selectMessages","props","map","Paper","key","float","background","elevation","Typography","component","Date","toTimeString","store","createStore","combineReducers","messagesReducer","filtersReducer","ReconnectingWebSocket","debug","reconnectInterval","onmessage","parse","data","slice","forEach","dispatch","_ref$time","_ref$id","_ref$from","_ref$message","addMessage","App","es","MessageList_MessageList","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.58aba832.chunk.js","sourcesContent":["const messagesReducerDefaultState = [];\r\n\r\nexport default (state = messagesReducerDefaultState, action) => {\r\n  switch (action.type) {\r\n    case 'ADD_MESSAGE':\r\n      return [\r\n        ...state,\r\n        action.message\r\n      ];\r\n    /* case 'EDIT_EXPENSE':\r\n      return state.map((expense) => {\r\n        if (expense.id === action.id) {\r\n          return {\r\n            ...expense,\r\n            ...action.updates\r\n          }\r\n        } else {\r\n          return expense;\r\n        }\r\n      })\r\n    case 'REMOVE_EXPENSE':\r\n      return state.filter(({ id }) => id !== action.id); */\r\n    default:\r\n      return state;\r\n  }\r\n};","const filtersReducerDefaultState = {\r\n  sortBy: 'date',\r\n  user: '',\r\n};\r\n\r\nexport default (state = filtersReducerDefaultState, action) => {\r\n  switch (action.type) {\r\n    case 'SET_USER':\r\n      return {\r\n        ...state,\r\n        user: action.user,\r\n      }\r\n    case 'SORT_BY_DATE':\r\n      return {\r\n        ...state,\r\n        sortBy: 'date',\r\n      }\r\n    default:\r\n      return state;\r\n    }\r\n  }","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport './MessageInput.css';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  textField: {\r\n    margin: theme.spacing(1,3),\r\n    backgroundColor: 'white',\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1,3),\r\n    backgroundColor: '#c2185b',\r\n  },\r\n}));\r\n\r\nexport default function Input({ socket }) {\r\n    const classes = useStyles();\r\n\r\n    const [message, setMessage] = React.useState({\r\n        value: '',\r\n    });\r\n    const [nick, setNick] = React.useState({\r\n      value: '',\r\n    });\r\n\r\n    function handleMessageChange(event) {\r\n        setMessage({value: event.target.value});\r\n      }\r\n\r\n    function handleNickChange(event) {\r\n      setNick({value: event.target.value});\r\n      localStorage.setItem('currentNick', event.target.value);\r\n    }\r\n\r\n    function sendMessage (event) {\r\n        const name = nick.value\r\n          ? nick.value : localStorage.getItem('currentNick');\r\n        const outgoingMessage = JSON.stringify({\r\n          from: name,\r\n          message: message.value,\r\n        });\r\n        if (name) {\r\n          socket.send(outgoingMessage);\r\n        }\r\n        setMessage({value: ''});\r\n        event.preventDefault();\r\n      }\r\n\r\n    return (\r\n      <form name=\"message\" onSubmit={sendMessage}>\r\n        <TextField\r\n          id=\"outlined-name\"\r\n          label=\"Сообщение:\"\r\n          className={classes.textField}\r\n          value={message.value}\r\n          onChange={handleMessageChange}\r\n          margin=\"normal\"\r\n          variant=\"outlined\"\r\n          style={{width: '40vw'}}\r\n        />\r\n        <TextField\r\n          id=\"outlined-name\"\r\n          label=\"Имя:\"\r\n          className={classes.textField}\r\n          value={nick.value}\r\n          onChange={handleNickChange}\r\n          margin=\"normal\"\r\n          variant=\"outlined\"\r\n        />\r\n        <Button type=\"submit\" variant=\"contained\" color=\"primary\" className={classes.button}>\r\n          Отправить\r\n        </Button>\r\n      </form>\r\n    );\r\n}\r\n","export default (messages, { user, sortBy }) => {\r\n  return messages.filter((message) => {\r\n    const userMatch = message.from.toLowerCase().includes(user.toLowerCase());   \r\n    return userMatch;\r\n  }).sort((a, b) => {\r\n     if (sortBy === 'date') {\r\n       return a.time > b.time ? 1 : -1;\r\n     } else return true;\r\n  });\r\n };","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport selectMessages from '../../store/selectors/messages';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  container: {\r\n    height: '90vh',\r\n    overflowY: 'scroll',\r\n    overflowX: 'hidden',\r\n    margin: '0 auto',\r\n    overflowWrap: 'break-word',\r\n    backgroundColor: 'white',\r\n  },\r\n  root: {\r\n    width: '60%',\r\n    padding: theme.spacing(3, 2),\r\n    margin:  theme.spacing(3, 2),\r\n    color: 'white',\r\n    textAlign: 'right',\r\n  },\r\n}));\r\n\r\nfunction MessageList(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      {props.messages.map((message) => {\r\n        return (\r\n        <Paper key={message.id} className={classes.root}\r\n            style={localStorage.getItem('currentNick')\r\n            && (localStorage.getItem('currentNick') === message.from) ?\r\n            {float: 'left', background: 'linear-gradient(145deg, #f48fb1, #ad1457)'}\r\n            : {float: 'right', background: 'linear-gradient(145deg, #80deea, #00bcd4)'}}\r\n            elevation={5}>\r\n          <Typography variant=\"h6\" component=\"p\">\r\n            {message.message}\r\n          </Typography>\r\n          <Typography variant=\"subtitle2\" component=\"p\">\r\n            FROM: {message.from}, {new Date(message.time).toTimeString()}\r\n          </Typography>\r\n        </Paper>\r\n        )})}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    messages: selectMessages(state.messages, state.filters),\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps)(MessageList);\r\n","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport configureStore from './store/configureStore';\r\nimport { addMessage } from './store/actions/messages';\r\nimport { sortByDate } from './store/actions/filters'\r\nimport MessageInput from './components/MessageInput/MessageInput';\r\nimport MessageList from './components/MessageList/MessageList';\r\nimport ReconnectingWebSocket from 'reconnectingwebsocket';\r\nimport './App.css';\r\n\r\nconst store = configureStore();\r\nconst socket = new ReconnectingWebSocket('wss://wssproxy.herokuapp.com/', null, { debug: false, reconnectInterval: 3000 });\r\n\r\nsocket.onmessage = function(event) {\r\n  const messages = JSON.parse(event.data).slice(0, 100);\r\n  messages.forEach((message) => {\r\n    store.dispatch(addMessage({ ...message }));\r\n  });\r\n  store.dispatch(sortByDate());\r\n}\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <MessageList socket={socket}/>\r\n      <MessageInput socket={socket}/>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { createStore, combineReducers } from 'redux';\r\nimport messagesReducer from './reducers/messages';\r\nimport filtersReducer from './reducers/filters';\r\n\r\nexport default () => {\r\n  const store = createStore(\r\n    combineReducers({\r\n      messages: messagesReducer,\r\n      filters: filtersReducer,\r\n    })\r\n  );\r\n  return store;\r\n};","export const addMessage = ({\r\n  time = '',\r\n  id = '',\r\n  from = '',\r\n  message = '',\r\n} = {}) => ({\r\n  type: 'ADD_MESSAGE',\r\n  message: {\r\n    from,\r\n    message,\r\n    id,\r\n    time,\r\n  }\r\n});","export const sortByDate = () => ({\r\n  type: 'SORT_BY_DATE',\r\n});\r\n\r\nexport const setUserFilter = (user = '') => ({\r\n  type: 'SET_USER',\r\n  user\r\n});","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}